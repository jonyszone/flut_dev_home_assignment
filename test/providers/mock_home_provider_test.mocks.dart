// Mocks generated by Mockito 5.4.5 from annotations
// in flut_dev_home_assignment/test/providers/mock_home_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:flut_dev_home_assignment/model/post.dart' as _i3;
import 'package:flut_dev_home_assignment/provider/home_provider.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HomeProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeProvider extends _i1.Mock implements _i2.HomeProvider {
  MockHomeProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Post> get posts => (super.noSuchMethod(
        Invocation.getter(#posts),
        returnValue: <_i3.Post>[],
      ) as List<_i3.Post>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  List<_i3.Post> get filteredPosts => (super.noSuchMethod(
        Invocation.getter(#filteredPosts),
        returnValue: <_i3.Post>[],
      ) as List<_i3.Post>);

  @override
  String get searchQuery => (super.noSuchMethod(
        Invocation.getter(#searchQuery),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#searchQuery),
        ),
      ) as String);

  @override
  bool get showSearch => (super.noSuchMethod(
        Invocation.getter(#showSearch),
        returnValue: false,
      ) as bool);

  @override
  int get totalPostsCount => (super.noSuchMethod(
        Invocation.getter(#totalPostsCount),
        returnValue: 0,
      ) as int);

  @override
  int get displayedPostsCount => (super.noSuchMethod(
        Invocation.getter(#displayedPostsCount),
        returnValue: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void toggleSearch() => super.noSuchMethod(
        Invocation.method(
          #toggleSearch,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> fetchPosts() => (super.noSuchMethod(
        Invocation.method(
          #fetchPosts,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updatePost(
    int? index,
    _i3.Post? updatedPost,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePost,
          [
            index,
            updatedPost,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createPost(_i3.Post? newPost) => (super.noSuchMethod(
        Invocation.method(
          #createPost,
          [newPost],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deletePost(int? index) => (super.noSuchMethod(
        Invocation.method(
          #deletePost,
          [index],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void filterPosts(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterPosts,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
